import argparse
import netifaces

#String Constants/Vars

descString = 'A python network pentesting tool'
confFilePath=''
attack_list=[]


def listInterfaces():
    return netifaces.interfaces()


def main():
    # Create the argument parser
    parser = argparse.ArgumentParser(description=descString)

    # Add arguments to the parser
    # Config file
    parser.add_argument('--conf-file', action='store')

    # Verbose configuration
    parser.add_argument('--verbose', '-v', action='count', default = 0, help='configure verbose level')

    # List available interfaces and exit
    parser.add_argument('--list-interfaces', action='store-true', help='list available interfaces and exit')

    # Create subparser for headless and normal modes
    subparsers = parser.add_subparsers(help='sub-command help')

    # Normal mode parser
    normal_parser = subparsers.add_parser('cli', help='cli help')

    # Headless mode parser
    headless_parser = subparsers.add_parser('headless', help='headless help')

    # Function choice
    headless_parser.add_argument('--attack', '-a', choices=attack_list)

    # Interface choice
    headless_parser.add_argument('--interface', '-i', choices=listInterfaces(), help='select interface to utilize')

    # Arg list for each attack
    headless_parser.add_argument('args', nargs='+', help="additional arguments for the selected attack")

    ns = parser.parse_args()

    if ns['list-interfaces'] == True:
        print(listInterfaces())
        exit(0)









if __name__ == '__main__':
    main()


